---
version: '3.8'
networks:
  kraken-dev:
services:
  db-data-plane:
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgresql
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kraken
    volumes:
      - './postgres_db_data/data-plane:/var/lib/postgresql/data:z'
    command: postgres -c 'max_connections=1000'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - kraken-dev
  db-control-plane:
    image: 'postgres:latest'
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: postgresql
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kraken
    volumes:
      - './postgres_db_data/control-plane:/var/lib/postgresql/data:z'
    command: postgres -c 'max_connections=1000'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - kraken-dev
  kraken-app-portal:
    image: cloudnexusopsdockerhub/kraken-app-portal:1.0.1
    ports:
      - '3000:8080'
    environment:
      RUNTIME_BASE_API: http://localhost:8001
    networks:
      - kraken-dev
  kraken-app-hub:
    image: cloudnexusopsdockerhub/kraken-app-hub:1.0.1
    volumes:
      - >-
        ./app-hub/application-default.yaml:/opt/app/config/application-default.yaml:ro
    ports:
      - '8000:8080'
    links:
      - db-data-plane
    depends_on:
      db-data-plane:
        condition: service_healthy
    networks:
      - kraken-dev
  kraken-app-controller:
    image: cloudnexusopsdockerhub/kraken-app-controller:1.0.1
    volumes:
      - >-
        ./app-controller/application-default.yaml:/opt/app/config/application-default.yaml:ro
    ports:
      - '8001:8080'
    links:
      - db-control-plane
    depends_on:
      db-control-plane:
        condition: service_healthy
    networks:
      - kraken-dev
  kraken-app-agent:
    image: cloudnexusopsdockerhub/kraken-app-agent:1.1.1
    volumes:
      - >-
        ./app-agent/application-default.yaml:/opt/app/config/application-default.yaml:ro
    ports:
      - '8002:8080'
    links:
      - db-data-plane
      - kraken-app-controller
      - kraken-app-hub
    depends_on:
      db-data-plane:
        condition: service_healthy
    networks:
      - kraken-dev
