---
kind: kraken.component.api-target-mapper
apiVersion: v1
metadata:
  key: mef.sonata.api-target-mapper.inventory.uni.list
  name: Inventory Connection API
  version: 2
spec:
  inputs:
    - mefQuery
    - mefRequestBody
    - entity
  trigger:
    path: /mefApi/sonata/productInventory/v7/product
    method: get
    productType: uni
  endpoints:
    - id: list uni product
      path: /api/company/{companyName}/ports/orders/{orderId}
      method: get
      mappers:
        request:
          - name: mapper.inventory.uni.list.buyerId
            title: "The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer."
            source: "@{{buyerId}}"
            sourceLocation: QUERY
            target: "@{{companyName}}"
            targetLocation: PATH
            requiredMapping: false
          - name: mapper.inventory.uni.list.orderId
            title: "associated order Id."
            source: "@{{productOrderId}}"
            sourceLocation: "QUERY"
            target: "@{{orderId}}"
            targetType: string
            targetLocation: "PATH"
            convertValue: "mef.sonata.api-target-mapper.order.uni.add#mapper.order.uni.add.orderId"
            requiredMapping: true
        response:
          - name: mapper.inventory.uni.list.id
            title: "Unique identifier of the product"
            source: "@{{responseBody.createdPortId}}"
            sourceLocation: BODY
            target: "@{{id}}"
            targetType: string
            targetLocation: BODY
            requiredMapping: true
          - name:  mapper.inventory.uni.list.startDate
            title: "The date from which the product starts"
            description: "BODY"
            source: "@{{responseBody.createdAt}}"
            sourceLocation: BODY
            target: "@{{startDate}}"
            targetType: string
            targetLocation: BODY
            requiredMapping: true
          - name: mapper.inventory.uni.list.status
            title: "Possible values for the status of a MEF product"
            source: "@{{responseBody.port.status}}"
            sourceLocation: BODY
            target: "@{{[*].status}}"
            targetType: enum
            targetLocation: BODY
            requiredMapping: true
            targetValues:
              - active
              - active.pendingChange
              - cancelled
              - pendingActive
              - pendingTerminate
              - suspended
              - suspendedPendingTerminate
              - terminated
            valueMappings:
              ACTIVE: active,
              ACTIVATING: pendingActive
              DELETING: pendingTerminate
              DISABLED: suspended
              DELETED: terminated
