---
kind: kraken.component.api-target
apiVersion: v1
metadata:
  key: mef.sonata.api-target.quote.eline.read.sync
  name: Quote Connection API
  mapperKey: mef.sonata.api-target-mapper.quote.eline.read.sync
  version: 0
spec:
  inputs:
    - mefQuery
    - mefRequestBody
    - entity
  trigger:
    path: /mefApi/sonata/quoteManagement/v8/quote/{id}
    method: get
    productType: access_e_line
  endpoints:
    - id: retrieve quote for connection
      url: ${env.target.url}
      path:
      method:
      requestBody: ${entity.request.quoteItem[0].product.productConfiguration.access_e_line}
      responseBody: |
        {
          "id": "${entity.id}",
          "relatedContactInformation": "${T(com.consoleconnect.kraken.operator.gateway.func.SpelFunc).appendSellerInformation('sellerContactInformation', env.seller.name, env.seller.emailAddress, env.seller.number, entity.request.relatedContactInformation)}",
          "buyerRequestedQuoteLevel": "${entity.request.buyerRequestedQuoteLevel}",
          "quoteItem": [{
            "product": "${entity.request.quoteItem[0].product}",
            "action": "${entity.request.quoteItem[0].action}",
            "id": "${entity.request.quoteItem[0].id}",
            "state": "${entity.renderedResponse.quoteItem[0].state}",
            "quoteItemPrice": "${entity.renderedResponse.quoteItem[0].quoteItemPrice}"
          }],
          "quoteDate": "${T(com.consoleconnect.kraken.operator.core.toolkit.DateTime).nowInUTCFormatted()}",
          "externalId":"${entity.request[externalId]?:''}",
          "instantSyncQuote":"${entity.request[instantSyncQuote]?:''}",
          "requestedQuoteCompletionDate": "${entity.request[requestedQuoteCompletionDate]?:''}"
        }