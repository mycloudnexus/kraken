---
kind: kraken.component.api-target
apiVersion: v1
metadata:
  key: mef.sonata.api-target.quote.eline.add
  name: Quote Connection API
  mapperKey: mef.sonata.api-target-mapper.quote.eline.add
  version: 4
spec:
  inputs:
    - mefQuery
    - mefRequestBody
  trigger:
    path: /mefApi/sonata/quoteManagement/v8/quote
    method: post
    productType: access_e_line
    actionType: add
  endpoints:
    - id: create quote for connection
      path:
      method:
      requestBody: ${mefRequestBody.quoteItem[0].product.productConfiguration.access_e_line}
      responseBody: |
        {
         "id": "${entity.id}",
         "relatedContactInformation": "${T(com.consoleconnect.kraken.operator.gateway.func.SpelFunc).appendSellerInformation('sellerContactInformation', env.seller.name, env.seller.emailAddress, env.seller.number, mefRequestBody.relatedContactInformation)}",
         "buyerRequestedQuoteLevel": "${mefRequestBody.buyerRequestedQuoteLevel}",
         "quoteItem": [{
             "quoteItem": "${mefRequestBody.quoteItem[0].requestedQuoteItemTerm}}",
             "requestedQuoteItemTerm": "${mefRequestBody.quoteItem[0].requestedQuoteItemTerm}}",
             "product": "${mefRequestBody.quoteItem[0].product}",
             "state": "",
             "quoteItemPrice": [{
               "price": {
                 "dutyFreeAmount": {
                   "unit": "",
                   "value": ""
                 }
               }
             }]
           }],
         "quoteDate": "${T(com.consoleconnect.kraken.operator.core.toolkit.DateTime).nowInUTCFormatted()}",
         "externalId":"${mefRequestBody[externalId]?:''}",
         "instantSyncQuote":"${mefRequestBody[instantSyncQuote]?:''}",
         "requestedQuoteCompletionDate": "${mefRequestBody[requestedQuoteCompletionDate]?:''}",
         "quoteLevel": "${mefRequestBody.buyerRequestedQuoteLevel}",
         "state": "((mefResponseBody.quoteItem[0].quoteItemPrice[0].price.dutyFreeAmount.value == '' ? 'unableToProvide': 'approved.orderable'))"
        }