---
name: ci-unit-test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  unit-test:
    name: unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze SDK
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: |
            mvn -B verify

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.12
          registry-url: 'https://registry.npmjs.org'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        working-directory: ./kraken-app/kraken-app-portal
        run: echo "dir=$(npm config get cache)" >> "${GITHUB_OUTPUT}"

      - uses: actions/cache@v3
        id: npm-cache  # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: browser-actions/setup-chrome@latest


      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - run: npm ci --ignore-scripts --legacy-peer-deps
        working-directory: ./kraken-app/kraken-app-portal

      - run: npm run build --if-present
        working-directory: ./kraken-app/kraken-app-portal

      # some repos don't have unit test now, need to add in future.
      - run: CHROME_BIN=$(which chrome) npm run test:coverage -- -u
        working-directory: ./kraken-app/kraken-app-portal
