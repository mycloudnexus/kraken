---
name: ci-vulnerability-scan
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  vulnerability-scan:
    name: vulnerability-scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      statuses: read
      checks: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - uses: anchore/scan-action/download-grype@v4
        id: grype

      - name: code scan
        run: ${{steps.grype.outputs.cmd}} -v -o json --file output.json --fail-on high --only-fixed dir:.

      - name: Output results to markdown table as a comment on the PR
        if: (success() || failure()) && github.event_name == 'pull_request'
        run: |
          echo '### Library Vulnerability scan results' > table.txt
          echo -e 'The following vulnerabilities have been found in libraries included in the repository (some might be dependencies of dependencies).\n' >> table.txt
          echo -e 'Critical and High severity vulnerabilities **must** be fixed before the PR can be merged, even if they are dependencies of dependencies.\n' >> table.txt

          jq -r '.matches[] |  [.artifact.name, .artifact.version, .vulnerability.severity, .vulnerability.fix.versions[0], .vulnerability.id, .vulnerability.dataSource] | @tsv' output.json | awk -v FS="\t" 'BEGIN{print "| Library | Vulnerable version | Severity | Fix version | Vulnerability ID |";print "| ------------ | ------------ | ------------ | ------------ | ------------ |"}{printf "| %s | %s | %s | %s | [%s](%s) |%s",$1,$2,$3,$4,$5,$6,ORS}' >> table.txt
          sed -ie 's/Critical/**Critical** :red_circle:/g' table.txt
          sed -ie 's/High/**High** :yellow_circle:/g' table.txt

          cat table.txt

          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

          gh pr comment $PR_NUMBER -F table.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
