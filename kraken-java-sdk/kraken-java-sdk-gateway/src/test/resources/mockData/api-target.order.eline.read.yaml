---
kind: kraken.component.api-target
apiVersion: v1
metadata:
  key: mef.sonata.api-target.order.eline.read
  name: Order Connection API
  mapperKey: mef.sonata.api-target.order.eline.read
spec:
  inputs:
    - mefQuery
    - mefRequestBody
    - entity
  trigger:
    path: /mefApi/sonata/productOrderingManagement/v10/productOrder/{id}
    method: get
    productType: access_e_line
  endpoints:
    - id: retrieve connection detail by id
      path: "/api/v2/company/{companyName}/connections/{connectionId}"
      pathReferId: "mef.sonata.api-target.order.eline.add#order.eline.add.orderId.mapper"
      method: get
      responseBody: |
        {
          "id": "${entity.id}",
          "relatedContactInformation": "${mefRequestBody.relatedContactInformation}",
          "productOrderItem": [{
            "action": "add",
            "id": "${entity.request.productOrderItem[0].id}",
            "product": "${entity.request.productOrderItem[0].product}",
            "state": "#ref{{mef.sonata.api-target.order.eline.add#order.eline.add.state.mapper}}"
          }],
          "state": "#ref{{mef.sonata.api-target.order.eline.add#order.eline.add.state.mapper}}"
        }
      mappers:
        request:
          - name: mapper.order.eline.read.buyerId
            title: "The unique identifier of the organization that is acting as the a Buyer."
            description: ""
            source: "@{{buyerId}}"
            sourceLocation: "QUERY"
            target: "@{{username}}"
            targetLocation: "PATH"
            requiredMapping: false
          - name: mapper.order.eline.read.orderId
            title: "Order Unique Identifier."
            description: ""
            source: "@{{id}}"
            sourceLocation: "PATH"
            target: "@{{connectionId}}"
            convertValue: "mef.sonata.api-target.order.eline.add#order.eline.add.orderId.mapper"
            targetLocation: "PATH"
            requiredMapping: true
        response:
          - name: mapper.order.eline.read.state
            title: "ProductOrderState"
            description: ""
            target: "@{{state}}"
            targetType: enum
            targetLocation: BODY
            requiredMapping: true
            targetValues:
              - acknowledged
              - assessingCancellation
              - held.assessingCharge
              - pending.assessingModification
              - cancelled
              - pendingCancellation
              - completed
              - failed
              - inProgress
              - partial
              - rejected
            valueMapping:
              ACTIVE: completed
              CREATING: acknowledged
            source: "@{{responseBody.status}}"
            sourceLocation: "BODY"
          - name: mapper.order.eline.read.completionDate
            title: "order complete date"
            description: ""
            source: "@{{responseBody.port.activeChangedAt}}"
            sourceLocation: "BODY"
            target: "@{{completionDate}}"
            targetLocation: "BODY"
            requiredMapping: false
          - name: mapper.order.eline.read.instanceId
            title: "instance id from seller"
            description: ""
            source: "@{{responseBody.port.id}}"
            sourceLocation: "BODY"
            target: "@{{productOrderItem[0].product.id}}"
            targetLocation: "BODY"
            requiredMapping: false
        
